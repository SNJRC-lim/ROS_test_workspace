<launch>
  <!-- Arguments -->
  <arg name="model" default="$(find rcj_robot)/urdf/rcj_robot.urdf"/>
  <arg name="gui" default="False"/>
  <!--
  <arg name="map_file_amcl" default="$(find rcj_2dnav)/maps/rcj_map_amcl.yaml"/>
  <arg name="map_file_move_base" default="$(find rcj_2dnav)/maps/rcj_map_move_base.yaml"/> 
  -->
  <arg name="map_file" default="$(find rcj_2dnav)/maps/rcj_map_amcl.yaml"/>
  <arg name="open_rviz" default="true"/>
  <arg name="move_forward_only" default="false"/>
  <arg name="laser_filter_file" default="$(find rcj_2dnav)/config/laser_filters.yaml"/>

  <!--robot model-->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="/home/snjrc-lim/catkin_ws_test/src/rcj_world/worlds/rcj_world.world"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>

  <!-- Map server -->
  <!--
  <node pkg="map_server" name="map_server_amcl" type="map_server" args="$(arg map_file_amcl)"/>
  <node pkg="map_server" name="map_server_move_base" type="map_server" args="$(arg map_file_move_base)"/>
  -->
  <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)"/>

  <!-- AMCL -->
  <include file="$(find rcj_2dnav)/launch/amcl.launch"/>

  <!-- move_base -->
  <include file="$(find rcj_2dnav)/launch/move_base.launch">
    <arg name="model" value="$(arg model)" />
    <arg name="move_forward_only" value="$(arg move_forward_only)"/>
  </include>


  <!-- laser_filter -->
  <node pkg="laser_filters" type="scan_to_scan_filter_chain" name="laser_filter">
    <rosparam command="load" file="$(arg laser_filter_file)" />
    <remap from="scan" to="/filtered/scan" />
  </node>

  <!-- rviz -->
  <group if="$(arg open_rviz)"> 
    <node pkg="rviz" type="rviz" name="rviz" required="true"
          args="-d $(find rcj_2dnav)/rviz/simulation.rviz"/>
  </group>

  <param name="robot_description" command="$(find xacro)/xacro --inorder $(arg model)"/>
  <param name="use_gui" value="$(arg gui)"/>

  <param name="/mavros/local_position/tf/send" type="bool" value="true" />
  <param name="/mavros/local_position/frame_id" type="str" value="odom" />
  <param name="/mavros/local_position/tf/frame_id" type="str" value="odom" />

  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/>
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>

  <!--<node pkg="tf" name="map2odom" type="static_transform_publisher" args="0 0 0 0 0 0 map odom 100"/>-->
  <node pkg="tf" name="base_link2lidar" type="static_transform_publisher" args="0 0 0.55 0 0 0 base_link lidar_link 100"/>
  <!--<node pkg="tf" name="base_footprint2base_link" type="static_transform_publisher" args="0 0 0.055 0 0 0 base_footprint base_link 100"/>-->

  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model rcj_robot" />
</launch>